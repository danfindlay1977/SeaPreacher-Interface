{"version":3,"sources":["containers/Login/Login-form/Login-form.js","components/Header/Header.js","auth.js","containers/Login/Login.js","components/Button-bar/buttonBar.js","containers/cockpit/Toolbar/Toolbar.js","containers/cockpit/Sidebar/Sidebar.js","containers/cockpit/VideoPlayer/VideoPlayer.js","containers/cockpit/Infobar/Inforbar.js","containers/cockpit/Control-btn/Control-btn.js","containers/cockpit/Controls/Controls.js","containers/cockpit/Cockpit.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["LoginForm","props","onSubmit","submit","error","type","onChange","change","value","passcode","name","src","qrUrl","alt","Header","Fragment","title","this","auth","cb","Login","handleChange","e","target","setState","handlePasscodeForm","preventDefault","user","userPin","state","currentPasscode","Axios","post","then","res","data","logIn","history","replace","errorMessage","url","get","console","log","className","React","Component","ButtonBar","Toolbar","onClick","logOut","Sidebar","VideoPlayer","playing","width","height","Infobar","ControlBtn","start","stop","Controls","forward","size","reverse","left","right","socket","io","Cockpit","emit","controlsOn","document","addEventListener","keyCode","PrivateRoute","component","Title","LogOut","rest","render","getAuth","to","path","from","location","App","logOutHandler","alert","put","locked","loggedin","exact","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5c78511.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./login-form.css\";\nconst LoginForm = (props) => {\n  return (\n    <form onSubmit={props.submit}>\n      <p>{props.error}</p>\n      <label>Enter Pass code</label>\n      <input\n        type=\"text\"\n        onChange={props.change}\n        value={props.passcode}\n        name=\"currentPasscode\"\n      />\n      <input type=\"submit\" value=\"Login\" />\n\n      <img src={props.qrUrl} alt=\"qr image\" />\n    </form>\n  );\n};\nexport default LoginForm;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = (props) => {\n  return (\n    <React.Fragment>\n      <header>\n        <h1>{props.title}</h1>\n        <p>\n          This is a web interface which allows a single user to control the Sea\n          preacher ROV submarine\n        </p>\n        <p>Scan the QR code to get a single-use code using google auth</p>\n      </header>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","class auth {\n  constructor() {\n    this.auth = false;\n  }\n  logIn(cb) {\n    this.auth = true;\n    cb();\n  }\n  logOut(cb) {\n    this.auth = false;\n    cb();\n  }\n  getAuth() {\n    return this.auth;\n  }\n}\nexport default new auth();\n","import React from \"react\";\nimport LoginForm from \"./Login-form/Login-form\";\nimport Header from \"../../components/Header/Header\";\nimport ContactForm from \"./Contact-form/Contact-form\";\nimport Axios from \"axios\";\nimport \"./Login.css\";\nimport auth from \"../../auth\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"SeaPreacher\",\n      currentPasscode: \"\",\n      url: \"\",\n      errorMessage: \"\"\n    };\n  }\n  componentDidMount() {\n    Axios.get(\"http://localhost:8000/auth\").then((res) => {\n      console.log(res.data.url);\n      this.setState({ url: res.data.url });\n    });\n  }\n\n  // handle changes in input form\n  handleChange = (e) => {\n    const value = e.target.value;\n    this.setState({ [e.target.name]: value });\n  };\n\n  handlePasscodeForm = (e) => {\n    e.preventDefault();\n    const user = {\n      userPin: this.state.currentPasscode\n    };\n    Axios.post(\"http://localhost:8000/auth\", { user }).then((res) => {\n      if (res.data.auth) {\n        auth.logIn(() => {\n          this.props.history.replace(\"/cockpit\");\n        });\n      } else {\n        this.setState({ errorMessage: \"This is the incorrect pin\" });\n      }\n    });\n\n    // compare new passcode to current passcode\n  };\n  render() {\n    return (\n      <div className=\"page\">\n        <Header title={this.state.title} />\n        <section className=\"main\">\n          <LoginForm\n            qrUrl={this.state.url}\n            passcode={this.passcode}\n            change={this.handleChange}\n            submit={this.handlePasscodeForm}\n            error={this.state.errorMessage}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\n\nconst ButtonBar = (props) => {\n  return (\n    <section className=\"button-bar\">\n      <section className=\"cockpit-btn\">Cockpit</section>\n      <section>Claw Grabber</section>\n    </section>\n  );\n};\nexport default ButtonBar;\n","import React from \"react\";\nimport \"./toolbar.css\";\nimport ButtonBar from \"../../../components/Button-bar/buttonBar\";\n\nconst Toolbar = (props) => {\n  return (\n    <section className=\"toolbar\">\n      <section className=\"logo\">\n        <h2>{props.title}</h2>\n      </section>\n      <section className=\"system-controls\">\n        <button>Lights on/off</button>\n        <ButtonBar />\n      </section>\n      <section className=\"basic-controls\">\n        <button>Poweroff</button>\n        <button onClick={props.logOut}>Sign Out</button>\n      </section>\n    </section>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\n\nconst Sidebar = (props) => {\n  return (\n    <section className=\"sidebar\">\n      <p>Live data from system</p>\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./VideoPlayer.css\";\nimport ReactPlayer from \"react-player\";\nimport \"../../../../node_modules/video-react/dist/video-react.css\";\n\nconst VideoPlayer = (props) => {\n  return (\n    <div className=\"player-wrapper\">\n      <ReactPlayer url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\" playing  width=\"100%\"\n    height=\"100%\" />\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n","import React from \"react\";\nimport \"./infobar.css\";\nconst Infobar = (props) => {\n  return <section className=\"infobar\">\n    \n  </section>;\n};\n\nexport default Infobar;\n","import React from \"react\";\n\nconst ControlBtn = (props) => {\n  return (\n    <section className=\"control-btn\">\n      <button onClick={props.start} className=\"start\">\n        Start\n      </button>\n      <button onClick={props.stop} className=\"stop\">\n        Stop\n      </button>\n    </section>\n  );\n};\n\nexport default ControlBtn;\n","import React from \"react\";\nimport {\n  FaArrowDown,\n  FaArrowLeft,\n  FaArrowRight,\n  FaArrowUp\n} from \"react-icons/fa\";\nconst Controls = (props) => {\n  return (\n    <section className=\"controls\">\n      <FaArrowUp onClick={props.forward} className=\"up control\" size=\"2em\" />\n      <FaArrowDown\n        onClick={props.reverse}\n        className=\" down control\"\n        size=\"2em\"\n      />\n      <FaArrowLeft onClick={props.left} className=\"left control\" size=\"2em\" />\n      <FaArrowRight\n        onClick={props.right}\n        className=\"right control\"\n        size=\"2em\"\n      />\n    </section>\n  );\n};\nexport default Controls;\n","import React from \"react\";\nimport Toolbar from \"./Toolbar/Toolbar\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport VideoPlayer from \"./VideoPlayer/VideoPlayer\";\nimport Infobar from \"./Infobar/Inforbar\";\nimport KeyPad from \"./Control-btn/Control-btn\";\nimport \"./cockpit.css\";\nimport Header from \"../../components/Header/Header\";\nimport auth from \"../../auth\";\nimport Axios from \"axios\";\nimport Login from \"../Login/Login\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ControlBtn from \"./Control-btn/Control-btn\";\nimport Controls from \"./Controls/Controls\";\n\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:8000\");\n\nclass Cockpit extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      controlsOn: false\n    };\n  }\n  componentDidMount() {\n    console.log(\"in here !!!\");\n    document.addEventListener(\"keydown\", (e) => {\n      switch (e.keyCode) {\n        // left\n        case 37:\n          //this.left();\n          socket.emit(\"left\");\n          break;\n        // up\n        case 38:\n          socket.emit(\"forward\");\n          //  this.up();\n          break;\n        // right\n        case 39:\n          //  this.right();\n          socket.emit(\"right\");\n          break;\n        // down\n        case 40:\n          //  this.reverse();\n          socket.emit(\"reverse\");\n          break;\n      }\n    });\n\n    // get a websockots connection\n  }\n  forward = (e) => {\n    socket.emit(\"forward\");\n  };\n  reverse = (e) => {\n    socket.emit(\"reverse\");\n  };\n\n  left = (e) => {\n    socket.emit(\"left\");\n  };\n  right = (e) => {\n    socket.emit(\"right\");\n  };\n\n  start = (e) => {\n    this.setState({ controlsOn: true });\n  };\n  stop = (e) => {\n    this.setState({ controlsOn: false });\n    socket.emit(\"stop\");\n  };\n\n  render() {\n    return (\n      <div className=\"cockpit\">\n        <Toolbar title={this.props.title} logOut={this.props.logOut} />\n        <VideoPlayer />\n        <Controls\n          left={this.left}\n          right={this.right}\n          forward={this.forward}\n          reverse={this.reverse}\n        />\n        <Sidebar />\n        <ControlBtn start={this.start} stop={this.stop} />\n        <Infobar />\n      </div>\n    );\n  }\n}\n\nexport default Cockpit;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport auth from \"../auth\";\n\nconst PrivateRoute = ({\n  component: Component,\n  title: Title,\n  logOut: LogOut,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (auth.getAuth()) {\n          return <Component title={Title} logOut={LogOut} {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                path: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\nexport default PrivateRoute;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Login from \"./containers/Login/Login\";\nimport Cockpit from \"./containers/cockpit/Cockpit\";\nimport auth from \"./auth\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Axios from \"axios\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"SeaPreacher\",\n      locked: false\n    };\n  }\n  // log user out and re-direct them home\n  logOutHandler = () => {\n    alert(\"msg\");\n    auth.logOut(() => {\n      Axios.put(\"http://localhost:8000/auth/signOut\", {\n        auth: false\n      }).then(() => {\n        this.setState({ locked: false });\n      });\n    });\n  };\n  render() {\n    // check if there is a user currently logged in\n    let loggedin;\n    if (!auth.getAuth()) {\n      loggedin = (\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => <Login {...props} title={this.state.title} />}\n        />\n      );\n    } else {\n      loggedin = (\n        <Route path=\"/\" exact render={() => <h1>User logged in</h1>} />\n      );\n    }\n\n    return (\n      <BrowserRouter>\n        {loggedin}\n        <PrivateRoute\n          title={this.state.title}\n          logOut={this.logOutHandler}\n          path=\"/cockpit\"\n          exact\n          component={Cockpit}\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}